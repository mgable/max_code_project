{"version":3,"sources":["Helpers/types.js","Helpers/index.jsx","Helpers/async.js","View/Saved/types.js","sagas.js","View/Search/types.js","View/Search/reducer.js","View/Detail/reducer.js","View/Saved/reducer.js","reducers.js","View/shared/Favorite/index.jsx","View/shared/Artist/index.jsx","View/Search/index.jsx","View/shared/Back/index.jsx","View/Detail/index.jsx","View/Saved/index.jsx","View/index.jsx","App.js","index.js"],"names":["domain","setProcessing","processing","type","getApi","action","omit","obj","blacklist","Array","isArray","Object","entries","filter","key","includes","reduce","val","assign","Error","searchStringToObj","str","results","replace","split","i","length","value","booleanTest","toLowerCase","$http","$","ajax","process","REACT_APP_API_URL","fetchData","Promise","resolve","reject","params","headers","Authorization","endpoint","response","_http","ep","then","error","fetch","payload","call","put","container","baggage","errorCondition","errorType","responseJSON","console","errorFor","watchAPI","takeEvery","removeFavorite","artist","addFavorite","setFavorites","favorites","watchAllActions","getFavorites","rootSaga","sessionStorage","reportEvents","logger","log","all","fetchArtists","artistID","method","ARTISTS_RECEIVED","fetchArtist","ARTIST_RECEIVED","DATA_RECEIVED","SIMILAR_RECEIVED","initialState","selected","entered","genres","cache","artists","setArtistReceived","state","data","setSelected","setGenres","setDataRecevied","textEntered","Genres","similar","similarCache","getSimilarArtist","id","setRelatedArtists","getArtist","clearArtist","setArtist","Detail","addToSessionStorage","JSON","stringify","e","parse","Saved","app","combineReducers","Search","Favorites","this","props","isFavorite","handleAddFavorite","handleRemoveFavorite","onclick","Button","className","title","onClick","variant","icon","faHeart","Component","getIsFavorite","connect","ownProps","dispatch","Artist","link","showAllGenres","handleDetailView","name","image","popularity","genreName","artistPopularity","additionalGenres","primaryGenre","genre","is_primary","primaryGenreName","map","join","Card","Text","Title","to","Img","src","Body","Favorite","location","search","handleGetSelected","evt","history","push","pathname","handleChange","handleSetSelected","selectedGenre","artistListing","labelKey","onChange","addSearch","onInputChange","options","getEntered","getGenres","getCache","getArtists","getSelectedGenre","getTextEntered","hasGenres","q","limit","fetchGenres","getGenre","linkTo","match","handleGetArtistFromCache","handleGetSimiliarFromCache","handleGetArtist","handleGetSimiliar","handleClearArtist","related","getSimilarArtists","getArtistID","fetchSimilar","getSimilarFromCache","getArtistFromCache","getFavoriteArtists","values","favoriteArtists","View","basename","path","exact","component","App","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.0538bbfd.chunk.js","sourcesContent":["/* constants */\nexport const domain = 'https://music.musicaudience.info';\nexport const genresEP = '/api/v1/music/genres';\nexport const genreSearchEP = '/api/v1/music/genres/<id>/artists';\nexport const artistEP = '/api/v1/music/artists/<id>';\nexport const similarEP = '/api/v1/music/artists/<id>/similar';\n\nexport const API_KEY = 'apikey f044f26d5e5c4fc185d9a73c0e41'\n\n/* action types */\nexport const UNSPECIFIED_ERROR = 'UNSPECIFIED_ERROR';\nexport const PENDING = 'PENDING';\nexport const GET_API = 'GET_API';\nexport const SET_PROCESSING = 'SET_PROCESSING';\n\n/* action creators */\nexport const setProcessing = processing => {\n  return { type: SET_PROCESSING, processing };\n};\n\n\n","import React from 'react';\nimport { GET_API } from './types';\n\nexport const getApi = action => {\n  return { type: GET_API, action };\n};\n\nexport const toTitleCase = (str) => {\n  if (typeof str !== 'string'){\n    return str;\n  }\n  \n  return str.replace(\n      /\\w\\S*/g,\n      (txt) => {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n  );\n}\n\nexport const refsToValues = (refs) => {\n  if (refs && typeof refs === \"object\"){\n    let obj = {};\n    refs._forEach(function(item, key) {\n      obj[key] = item.current && item.current.value;\n    });\n\n    return obj;\n  }\n\n  throw new Error (`There was and error with the refs: ${refs}`);\n}\n\nexport const formatPhone = number => {\n  if (typeof number === \"string\" && number.length === 10){\n    return number.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\")\n  } \n\n  return number;\n}\n\nvar errorRegExp = /Error$/;\n\nexport const hasNoStateErrors = state => {\n  for (let prop in state){\n    if (errorRegExp.test(prop)){\n      return (state[prop].message === null || state[prop].message === \"\") ? true : false;\n    }\n  }\n\n  return true;\n}\n\nexport const getElementAndAttributes = (elementID, useRoot = true) => {\n  var element\n  if (elementID){\n    element = document.getElementById(elementID);\n  }\n\n  if (useRoot){\n    if (!element) {\n      element = document.getElementById('root');\n    }\n\n     if (!element) {\n      throw new Error (\"No root element found!\")\n    }\n  } else {\n    if (!element) {\n      return false;\n    }\n  }\n\n  var attrs = getAttributes(element);\n  \n  return {element, attrs};\n}\n\nexport const getAttributes = (element) => {\n  if (element && typeof element === 'object' ){\n\n    let attrsArray = Array.prototype.map.call(element.attributes, (attr) => { return {[attr.name]:attr.value} });\n\n    let attrs = attrsArray.reduce((i, acc) => Object.assign(acc, i), {})\n\n    return attrs;\n  }\n\n  return false;\n}\n\nexport const currency = (_price, isFree) => {\n  var price = _price;\n\n  if ( price === null || price === false || isNaN(price)) { // price of \"0\" is \"free\" not falsy\n    return price;\n  } else if (price === 0 && isFree) {\n    return 'free';\n  }\n\n  if (typeof price === \"string\"){\n    price = parseFloat(price)\n  }\n\n  return `$${price.toFixed(2)}`;\n};\n\n\n\nexport const omit = (obj, blacklist) => {\n  if (Array.isArray(blacklist)) {\n    return Object.entries(obj)\n      .filter(([key]) => !blacklist.includes(key))\n      .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\n  }\n\n  throw new Error('blacklist needs to be an array');\n};\n\nexport const formatDate = date => {\n  return `${date.getFullYear()}-${pad( (date.getMonth() + 1) )}-${pad(date.getDate())}`; // must have a 1 based index for month\n};\n\nexport const searchStringToObj = str => {\n  var results = str.replace(/^\\??/, '').split('='),\n    obj = {};\n  if (str) {\n    for (let i = 0; i < results.length; i += 2) {\n      let key = results[i],\n        value = results[i + 1];\n\n      if (booleanTest(value)) {\n        value = value.toLowerCase() === 'true' ? true : false;\n      }\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  return false;\n};\n\nexport const importAll = r => {\n  return r.keys().map(r);\n};\n\n\nexport const booleanTest = value =>\n  value.toLowerCase() === 'true' || value.toLowerCase() === 'false';\n\n\nexport const isNotANumber = string => isNaN(parseInt(string, 10)); // trap for string === null conditon\n\nexport const validation = {\n  telephone: /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/,\n  email: /\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b/i,\n  day: /(^0[1-9]$)|(^[1-2][0-9]$)|(^3[01]$)|(^[1-9]{1}$)/,\n  year: /(^19\\\\d{2}$)|(^20\\\\d{2}$)/\n};\n\n\nexport const validate = (str, pattern) => {\n  if (validation[pattern]) {\n    return validation[pattern].test(str);\n  } else {\n    let message = `Pattern ${pattern} is not supported!`;\n    throw new Error(message);\n  }\n};\n\nexport const isEmpty = obj => {\n  if (!obj) return true;\n  return Object.keys(obj).length === 0 && obj.constructor === Object\n    ? true\n    : false;\n};\n\nexport const createRefs = fields => {\n  return fields.reduce(\n    (acc, field) => Object.assign(acc, { [field]: React.createRef() }),\n    {}\n  );\n};\n\nexport const scrollTo = (element) => {\n  if (\n    element &&\n    element.parentElement &&\n    element.parentElement.scrollIntoView\n  ) {\n    element.parentElement.scrollIntoView();\n  }\n}\n\nexport const pad = item => ('00' + item).slice(-2);\n\nexport const convertDayOfWeek = str => {\n  switch (str) {\n    case 'MON':\n      return 'Monday';\n    case 'TUE':\n      return 'Tuesday';\n    case 'WED':\n      return 'Wednesday';\n    case 'THU':\n      return 'Thursday';\n    case 'FRI':\n      return 'Friday';\n    case 'SAT':\n      return 'Saturday';\n    case 'SUN':\n      return 'Sunday';\n    default:\n      return '--';\n  }\n};\n\n","/*global process */ \n\nimport $ from 'jquery';\nimport { UNSPECIFIED_ERROR,  GET_API, setProcessing, API_KEY } from './types';\nimport { omit } from './index';\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\nconst $http = $.ajax;\nconst domain = (process.env.REACT_APP_API_URL || '');\n\nconst fetchData = action => {\n  return new Promise((resolve, reject) => {\n    let params = Object.assign({}, action.params, {headers: {Authorization: API_KEY}})\n    _http(action.ep, params).then(\n      response => {\n        resolve(response);\n      },\n      error => {\n        reject(error);\n        throw new Error(error);\n      }\n    );\n  });\n};\n\nfunction _http(endpoint, params) {\n  return $http(domain + endpoint, params, response => {\n    return response;\n  });\n}\n\nexport const fetch = function* fetch(payload, type=call,) {\n  yield put(setProcessing(true));\n\n  var response,\n    errorType,\n    container = payload.action.container || 'response',\n    baggage = omit(payload.action, ['type', 'ep', 'params']);\n\n  try {\n    response = yield type(fetchData, payload.action);\n    if (payload.action.errorCondition && typeof payload.action.errorCondition === \"function\"  && payload.action.errorCondition(response)){\n      errorType = payload.action.errorType || UNSPECIFIED_ERROR;\n    }\n  } catch (e) {\n    response = e.responseJSON\n    errorType = payload.action.errorType || UNSPECIFIED_ERROR;\n    console.error('There was an error fetching: ', response); // cant throw here because fetch must always succeed.\n  }\n\n  yield put({\n    type: errorType || payload.action.type,\n    errorFor: payload.action.errorFor || null,\n    [container]: response,\n    ...baggage\n  });\n\n  yield put(setProcessing(false));\n}\n\n// grab all API calls and route them to http agent (e.g. the above fetch method)\nexport const watchAPI = function* watchAPI() {\n  try {\n    yield takeEvery(GET_API, fetch);\n  } catch (e) {\n    throw new Error('There was an error: ', e);\n  }\n}","/* Event Types */\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\nexport const SET_FAVORITES = \"SET_FAVORITES\";\n\n/* Event Creators */\nexport const removeFavorite = artist => {\n\treturn { type: REMOVE_FAVORITE, artist };\n}\n\nexport const addFavorite = artist => {\n\treturn { type: ADD_FAVORITE, artist };\n}\n\nexport const setFavorites = favorites => {\n\treturn {type: SET_FAVORITES, favorites }\n}\n","/* imports */\nimport {\n  all,\n  takeEvery,\n  put\n} from 'redux-saga/effects';\nimport { watchAPI } from './Helpers/async';\nimport { setFavorites } from './View/Saved/types';\n\n// Saga generator functions\n/** private function\n * @description  prints all actions to console.log\n */\nfunction* watchAllActions() {\n  if (sessionStorage && sessionStorage.reportEvents) {\n    // eslint-disable-next-line require-yield\n    yield takeEvery('*', function* logger(action) {\n      console.log(action);\n    });\n  }\n}\n\n\nfunction* getFavorites() {\n  yield put(setFavorites(sessionStorage && sessionStorage.favorites));\n}\n\n/** public function\n * @description  yield all saga generator functions\n */\nexport default function* rootSaga() {\n  yield all([\n    watchAllActions(),\n    watchAPI(),\n    getFavorites(),\n  ]);\n}\n","import {  domain, genresEP, genreSearchEP, artistEP, similarEP } from '../../Helpers/types';\n\n// constants\nexport const fetchSimilar = artistID => {\n\tlet ep = similarEP.replace(\"<id>\", artistID);\n\n\treturn {\n\t\tep: `${domain}${ep}`,\n\t\tparams: {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\ttype: SIMILAR_RECEIVED,\n\t\tcontainer: 'response',\n\t\tartistID\n\t}\n\n}\n\nexport const fetchGenres = value => { \n \treturn {\n\t\tep: `${domain}${genresEP}`,\n\t\tparams: {\n\t\t\tdata: {q:value, limit: 5},\n\t\t\tmethod: 'GET'\n\t\t},\n\t\ttype: DATA_RECEIVED,\n\t\tcontainer: 'response',\n\t\tvalue\n\t}\n}\n\nexport const fetchArtists = artistID => {\n\tlet ep = genreSearchEP.replace(\"<id>\", artistID);\n\n\treturn {\n\t\tep: `${domain}${ep}`,\n\t\tparams: {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\ttype: ARTISTS_RECEIVED,\n\t\tcontainer: 'response',\n\t\tartistID\n\t}\n}\n\nexport const fetchArtist = artistID => {\n\tlet ep = artistEP.replace(\"<id>\", artistID);\n\n\treturn {\n\t\tep: `${domain}${ep}`,\n\t\tparams: {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\ttype: ARTIST_RECEIVED,\n\t\tcontainer: 'response',\n\t\tartistID\n\t}\n}\n\n// event types\nexport const TEXT_ENTERED = \"TEXT_ENTERED\";\nexport const DATA_RECEIVED = \"DATA_RECEIVED\";\nexport const SET_GENRES = \"SET_GENRES\";\nexport const SET_SELECTED = \"SET_SELECTED\";\nexport const ARTISTS_RECEIVED = \"ARTISTS_RECEIVED\";\nexport const ARTIST_RECEIVED = \"ARTIST_RECEIVED\"\nexport const CLEAR_ARTIST = \"CLEAR_ARTIST\";\nexport const GET_ARTIST = \"GET_ARTIST\";\nexport const SIMILAR_RECEIVED = \"SIMILAR_RECEIVED\";\nexport const GET_SIMILAR = \"GET_SIMILAR\";\n\n// event creators\nexport const getSimilar = id => {\n\treturn {type: GET_SIMILAR, id};\n}\n\nexport const getArtist = id => {\n\treturn {type: GET_ARTIST, id};\n}\n\nexport const getTextEntered = value => {\n\treturn {type: TEXT_ENTERED, value};\n}\n\nexport const setGenres = value => {\n\treturn {type: SET_GENRES, value};\n}\n\nexport const setSelected = selected => {\n\treturn {type: SET_SELECTED, selected};\n}\n\nexport const clearArtist = () => {\n\treturn {type: CLEAR_ARTIST }\n}\n\n","import { DATA_RECEIVED, TEXT_ENTERED, SET_GENRES, SET_SELECTED, ARTISTS_RECEIVED } from './types';\n\nconst initialState = {\n  selected: null,\n  entered: \"\",\n  genres: [],\n  cache: {},\n  artists: []\n};\n\nconst Genres = (state = initialState, action) => {\n  switch (action.type) {\n    case TEXT_ENTERED:\n      return textEntered(state, action);\n    case DATA_RECEIVED:\n      return setDataRecevied(state, action);\n    case ARTISTS_RECEIVED:\n      return setArtistReceived(state, action);\n    case SET_GENRES:\n      return setGenres(state, action);\n    case SET_SELECTED:\n      return setSelected(state, action);\n    default:\n      return state;\n  }\n};\n\nconst setArtistReceived = (state, action) => {\n  let artists = action.response.data;\n  return Object.assign({}, state, {artists})\n}\n\nconst setSelected = (state, action) => {\n  let selected = action.selected;\n  if (state.selected !== selected){\n    return Object.assign({}, state, {selected});\n  }\n\n  return state;\n}\n\nconst setGenres = (state, action) => {\n  let key = action.value,\n    genres = state.cache[key];\n  return Object.assign({}, state, {genres})\n}\n\nconst setDataRecevied = (state, action) => {\n  let genres = action.response.data, \n    cache = Object.assign({}, state.cache, {[action.value]: genres})\n  return Object.assign({}, state, {genres, cache})\n}\n\nconst textEntered = (state, action) => {\n  let entered = action.value;\n  if (entered !== state.entered){\n    return Object.assign({}, state, {entered})\n  }\n\n  return state\n}\n\nexport default Genres;","import { ARTIST_RECEIVED, CLEAR_ARTIST, GET_ARTIST, SIMILAR_RECEIVED, GET_SIMILAR } from '../Search/types';\n\nconst initialState = {\n  artist: null,\n  similar: [],\n  cache: {},\n  similarCache: {}\n};\n\nconst Detail = (state = initialState, action) => {\n  switch (action.type) {\n    case ARTIST_RECEIVED:\n      return setArtist(state, action);\n    case CLEAR_ARTIST:\n    \treturn clearArtist(state, action);\n    case GET_ARTIST:\n      return getArtist(state, action);\n    case SIMILAR_RECEIVED:\n      return setRelatedArtists(state, action);\n    case GET_SIMILAR:\n      return getSimilarArtist(state, action);\n    default:\n      return state;\n  }\n};\n\nconst getSimilarArtist = (state, action) => {\n  let id = action.id,\n    similar = state.similarCache[id];\n\n    return Object.assign({}, state, {similar})\n}\n\nconst setRelatedArtists = (state, action) => {\n  let similar = action.response.data,\n    id = action.artistID;\n\n  state.similarCache[id] = similar;\n\n  return Object.assign({}, state, {similar})\n}\n\nconst getArtist = (state, action) => {\n  let id = action.id,\n    artist = state.cache[id];\n\n    if (artist){\n      return Object.assign({}, state, {artist});\n    }\n\n    return state;\n}\n\nconst clearArtist = (state, action) => {\n\treturn initialState;\n}\n\nconst setArtist = (state, action) => {\n  let artist = action.response.data[0],\n    id = artist.id;\n\n  state.cache[id] = artist;\n\n  return Object.assign({}, state, {artist})\n}\n\nexport default Detail;","import { ADD_FAVORITE, REMOVE_FAVORITE, SET_FAVORITES } from './types';\n\nconst initialState = {\n  favorites: {}\n};\n\nconst Saved = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAVORITE:\n      return addFavorite(state, action);\n    case REMOVE_FAVORITE:\n    \treturn removeFavorite(state, action);\n    case SET_FAVORITES:\n      return setFavorites(state, action);\n    default:\n      return state;\n  }\n};\n\nconst addToSessionStorage = value => {\n  try {\n    let favorites = JSON.stringify(value);\n    sessionStorage.favorites = favorites;\n  } catch (e) {\n    throw new Error (\"There was an error saving your favorites: \" + e)\n  }\n}\n\n\nconst setFavorites = (state, action) => {\n  var favorites = action.favorites;\n  if (favorites){\n    try {\n      favorites = JSON.parse(favorites);\n    } catch (e) {\n      throw new Error (\"There was an error getting your favorites: \" + e)\n    }\n    return Object.assign({}, state, {favorites});\n  }\n\n  return state;\n}\n\nconst addFavorite = (state, action) => {\n  let artist = action.artist;\n\n  if (!state.favorites[artist.id]){\n    state.favorites[artist.id] = artist;\n    addToSessionStorage(state.favorites)\n    return Object.assign({}, state);\n  }\n\n  return state;\n}\n\nconst removeFavorite = (state, action) => {\n  let id = action.artist.id;\n  if (state.favorites[id]){\n    delete state.favorites[id];\n    addToSessionStorage(state.favorites)\n    return Object.assign({}, state);\n  }\n\n  return state;\n}\n\nexport default Saved;","import { combineReducers } from 'redux';\nimport Search from './View/Search/reducer';\nimport Detail from './View/Detail/reducer';\nimport Saved from './View/Saved/reducer';\n\nconst app = combineReducers({\n\tSearch,\n\tDetail,\n\tSaved\n});\n\nexport default app;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { addFavorite, removeFavorite } from '../../Saved/types';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport faHeart from '@fortawesome/fontawesome-free-solid/faHeart';\nimport './favorite.css';\n\nclass Favorites extends Component {\n\trender(){\n\t\tlet {artist, isFavorite , handleAddFavorite, handleRemoveFavorite} = this.props,\n\t\t\tonclick = () => { \n\t\t\t\tif (isFavorite){\n\t\t\t\t\thandleRemoveFavorite(artist);\n\t\t\t\t} else {\n\t\t\t\t\thandleAddFavorite(artist);\n\t\t\t\t}\n\t\t\t};\n\n\t\tif (isFavorite){\n\t\t\treturn <Button className=\"favorite\" title=\"I am a favorite\" onClick={onclick} variant=\"primary\"><FontAwesomeIcon icon={faHeart} /></Button>\n\t\t} else {\n\t\t\treturn <Button title=\"I am NOT a favorite\" onClick={onclick} variant=\"primary\"><FontAwesomeIcon icon={faHeart} /></Button>\n\t\t}\n\t}\n}\n\nconst getIsFavorite = (state, props) => state.Saved.favorites[props.artist.id];\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tisFavorite: getIsFavorite(state, ownProps),\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleRemoveFavorite: artist => {\n\t\t\tdispatch(removeFavorite(artist))\n\t\t},\n\t\thandleAddFavorite: artist => {\n\t\t\tdispatch(addFavorite(artist))\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Favorites);","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport Favorites from '../Favorite';\nimport './artist.css'\n\nconst Artist = (props) => {\n\tif (props.artist){\n\t\tvar link;\n\t\tlet { artist, showAllGenres,  handleDetailView} = props,\n\t\t\t{name, image, genres, id, popularity } = artist,\n\t\t\tgenreName = null,\n\t\t\tartistPopularity = null,\n\t\t\tadditionalGenres = null,\n\t\t\tprimaryGenre = genres.filter((genre) => genre.is_primary),\n\t\t\tprimaryGenreName = null\n\n\t\t\tif (primaryGenre && primaryGenre.length){\n\t\t\t\tprimaryGenreName = primaryGenre[0].name\n\t\t\t}\n\n\t\tif (showAllGenres) {\n\t\t\t\n\t\t\tlet genreNames = genres.map((genre) => genre.name).filter((genre) => genre !== primaryGenreName);\n\n\t\t\tgenreName = genreNames.join(\", \");\n\t\t\tartistPopularity  = <Card.Text>Popularity: {popularity}</Card.Text>;\n\t\t\tadditionalGenres = genreName ? <Card.Text>Additional Genres: {genreName}</Card.Text> : null;\n\t\t}\n\n\t\tif(handleDetailView){\n\t\t\tlink = <Card.Title><Link to={\"/detail/\" + id}><span className=\"view\">{name}</span></Link></Card.Title>\n\t\t} else {\n\t\t\tlink = <Card.Title><span className=\"view no-link\">{name}</span></Card.Title>\n\n\t\t}\n\n\t\treturn (\n\t\t\t<Card key={id}>\n\t\t\t\t<Card.Img variant=\"top\" src={image} />\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{link}\n\t\t\t\t\t<Card.Text>Primary Genre:<br /><span className=\"primary-genre\">{primaryGenreName}</span></Card.Text>\n\t\t\t\t\t{additionalGenres}\n\t\t\t\t\t{artistPopularity}\n\t\t\t\t\t<Favorites artist={artist} />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n\n\treturn null;\n}\n\nexport default Artist;","import React, {Component}  from 'react';\nimport { connect } from 'react-redux';\nimport { getApi, searchStringToObj } from '../../Helpers';\nimport { Link } from \"react-router-dom\";\nimport { getTextEntered, fetchGenres, setGenres, setSelected, fetchArtists, fetchArtist } from './types';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport Artist from '../shared/Artist';\nimport './search.css';\n\nclass Search extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet { location } = props,\n\t\t\tparams = searchStringToObj(location.search);\n\n\t\tif(params.id && !this.props.artists.length){\n\t\t\tthis.props.handleGetSelected(params.id)\n\t\t}\n\t}\n\n\taddSearch(evt) {\n\t\tif (evt && evt[0] && evt[0].id) {\n\t\t\tlet id = evt[0].id;\n\t\t\tthis.props.history.push({\n\t\t\t    pathname: '/',\n\t\t\t    search: `?id=${id}`\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { handleChange, genres, cache, handleSetSelected, artists, handleDetailView, selectedGenre } = this.props,\n\t\t\tartistListing = artists && artists.length ? artists.map((artist) => <div className=\"col\" key={artist.id}><Artist artist={artist} handleDetailView={handleDetailView} /></div>) : null,\n\t\t\tselected = selectedGenre ? <span>You have selected the <em>{selectedGenre}</em> genre</span> : null;\n\n\t\treturn (\n\t\t\t<div className=\"search col-sm\">\n\t\t\t\t<h1>Search</h1>\n\t\t\t\t<nav>\n\t\t\t\t\t<Link className=\"favorites-link\" to=\"/saved\">View Favorites</Link>\n\t\t\t\t</nav>\n\t\t\t\t<div className=\"search-input\">\n\t\t\t\t\t<label>Enter a term to search for music genres</label>\n\t\t\t\t\t<Typeahead labelKey=\"name\" onChange={(evt) => { handleSetSelected(evt); this.addSearch(evt)} } onInputChange={(evt) => handleChange(cache, evt)} options={genres} id=\"typeAheadID\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"selected-genre\">\n\t\t\t\t\t{selected}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"search-results\">\n\t\t\t\t\t<div className=\"artists\">{artistListing}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst getEntered = state => state.Search.entered;\nconst getGenres = state => state.Search.cache[state.Search.entered] || [];\nconst getCache = state => state.Search.cache;\nconst getArtists = state => state.Search.artists;\nconst getSelectedGenre = state => state.Search.selected && state.Search.selected.name\nconst hasGenres = (cache, value) => !!(cache[value]);\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tentered: getEntered(state),\n\t\tgenres: getGenres(state),\n\t\tcache: getCache(state),\n\t\tartists: getArtists(state),\n\t\tselectedGenre: getSelectedGenre(state)\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleGetSelected: id => {\n\t\t\tif (id){\n\t\t\t\tdispatch(getApi(fetchArtists(id)));\n\t\t\t}\n\t\t},\n\t\thandleSetSelected: (evt) => {\n\t\t\tif (evt && Array.isArray(evt) && evt.length){\n\t\t\t\tlet selected = evt[0],\n\t\t\t\t\tid = evt[0].id\n\t\t\t\tif (selected && id){\n\t\t\t\t\tdispatch(setSelected(selected))\n\t\t\t\t\tdispatch(getApi(fetchArtists(id)));\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thandleChange: (cache, value) => {\n\t\t\tdispatch(getTextEntered(value));\n\n\t\t\tif (hasGenres(cache, value)) {\n\t\t\t\tdispatch(setGenres(value))\n\t\t\t} else {\n\t\t\t\tdispatch(getApi(fetchGenres(value)));\n\t\t\t}\n\t\t},\n\t\thandleDetailView: artistID => {\n\t\t\tdispatch(getApi(fetchArtist(artistID)))\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Search);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nconst Back = (props) => {\n\tlet {genre} = props,\n\t\tid = genre && genre.id,\n\t\tlinkTo = id ? \"/?id=\" + id : \"/\";\n\treturn (\n\t\t<Link to={linkTo}>Back to Search</Link>\n\t);\n\t\n}\n\nconst getGenre = state => state.Search.selected;\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tgenre: getGenre(state)\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Back);\n\n\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Artist from '../shared/Artist';\nimport Back from '../shared/Back';\nimport { getApi } from '../../Helpers';\nimport { fetchArtist, clearArtist, getArtist as getArtistFromCache, getSimilar as getSimilarFromCache, fetchSimilar } from '../Search/types';\nimport { Link } from \"react-router-dom\";\nimport './detail.css';\n\nclass Detail extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tif(props.match && props.match.params && props.match.params.id){\n\t\t\tlet id = props.match.params.id\n\t\t\tif (props.cache[id]){\n\t\t\t\t// get artist from cache\n\t\t\t\tprops.handleGetArtistFromCache(id);\n\t\t\t\tprops.handleGetSimiliarFromCache(id);\n\t\t\t} else {\n\t\t\t\t// request new artist from server\n\t\t\t\tprops.handleGetArtist(id);\n\t\t\t\tprops.handleGetSimiliar(id);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"No artist id was supplied!\")\n\t\t}\n\t}\n\n\tcomponentWillUnmount(){\n\t\tthis.props.handleClearArtist();\n\t}\n\t\n\trender(){\n\t\tlet { artist } = this.props,\n\t\t\trelated = this.props.similar.map((artist) => <Artist key={artist.id} artist={artist} />)\n\n\t\tif (artist) {\n\t\t\treturn (\n\t\t\t\t<div className=\"details\">\n\t\t\t\t\t<h1>Details</h1>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<Back />&nbsp;|&nbsp;\n\t\t\t\t\t\t<Link className=\"favorites-link\" to=\"/saved\">View Favorites</Link>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"detail col-sm-6\">\n\t\t\t\t\t\t\t<div className=\"search-results\">\n\t\t\t\t\t\t\t\t<Artist artist={artist} showAllGenres={true}  />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"related col-sm-6\">\n\t\t\t\t\t\t\t<div className=\"artists\">\n\t\t\t\t\t\t\t\t<h4>Related Artists</h4>\n\t\t\t\t\t\t\t\t{related}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nconst getArtistID = state => state.Detail.artist && state.Detail.artist.id;\nconst getArtist = state => state.Detail.artist;\nconst getCache = state => state.Detail.cache;\nconst getSimilarArtists = state => state.Detail.similar.filter((artist) =>  artist.id !== getArtistID(state));\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tartist: getArtist(state),\n\t\tsimilar: getSimilarArtists(state),\n\t\tcache: getCache(state)\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleGetSimiliar: id => {\n\t\t\tdispatch(getApi(fetchSimilar(id)));\n\t\t},\n\t\thandleGetSimiliarFromCache: id => {\n\t\t\tdispatch(getSimilarFromCache(id));\n\t\t},\n\t\thandleGetArtist: id => {\n\t\t\tdispatch(getApi(fetchArtist(id)));\n\t\t},\n\t\thandleClearArtist: () => {\n\t\t\tdispatch(clearArtist());\n\t\t},\n\t\thandleGetArtistFromCache: id => {\n\t\t\tdispatch(getArtistFromCache(id));\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Detail);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addFavorite, removeFavorite } from './types';\nimport Artist from '../shared/Artist';\nimport Back from '../shared/Back';\nimport { getApi } from '../../Helpers';\nimport { fetchArtist } from '../Search/types';\nimport './saved.css';\n\nconst Saved = (props) => {\n\tvar artists;\n\n\tlet { favoriteArtists, handleDetailView } = props;\n\t\tartists = favoriteArtists.map((artist) => <Artist key={artist.id} artist={artist} handleDetailView={handleDetailView} />);\n\n\tif (artists && artists.length === 0){\n\t\tartists = <span>You have no saved favorites</span>\n\t}\n\n\treturn (\n\t\t<div className=\"saved\">\n\t\t\t<h1>Favorites</h1>\n\t\t\t<nav>\n\t\t\t\t<Back />\n\t\t\t</nav>\n\t\t\t<div className=\"search-results\">\n\t\t\t\t<div className=\"artists\">{artists}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst getFavorites = state => state.Saved.favorites;\nconst getFavoriteArtists = state =>  Object.values(getFavorites(state))\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tfavoriteArtists: getFavoriteArtists(state)\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleRemoveFavorite: id => {\n\t\t\tdispatch(removeFavorite(id))\n\t\t},\n\t\thandleAddFavorite: id => {\n\t\t\tdispatch(addFavorite(id))\n\t\t},\n\t\thandleDetailView: artistID => {\n\t\t\tdispatch(getApi(fetchArtist(artistID)))\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Saved);","import React from 'react';\nimport Search from './Search';\nimport Detail from './Detail';\nimport Saved from './Saved';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './view.css';\n\nconst View = () => {\n\treturn (\n\t\t<div className=\"component\">\n\t\t<Router basename=\"/\">\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/saved\" exact component={Saved} />\n\t\t\t\t<Route path=\"/detail/:id\" exact component={Detail} />\n\t\t\t\t<Route path=\"/:id?\" exact component={Search} />\n\t\t\t</Switch>\n\t\t</Router>\n\t\t</div>\n\t)\n}\nexport default View","import React from 'react';\nimport View from './View'\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <View />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nimport reducers from './reducers';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './index.css';\n\n// saga boilerplate\nconst sagaMiddleware = createSagaMiddleware();\nlet store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}