{"version":3,"sources":["Helpers/types.js","Helpers/index.jsx","Helpers/async.js","View/Saved/types.js","sagas.js","View/Search/types.js","View/Search/reducer.js","View/Detail/reducer.js","View/Saved/reducer.js","reducers.js","View/shared/Favorites.jsx","View/shared/Artist.jsx","View/Search/index.jsx","View/shared/Back.jsx","View/Detail/index.jsx","View/Saved/index.jsx","View/index.jsx","App.js","index.js"],"names":["domain","setProcessing","processing","type","getApi","action","omit","obj","blacklist","Array","isArray","Object","entries","filter","key","includes","reduce","val","assign","Error","searchStringToObj","str","results","replace","split","i","length","value","booleanTest","toLowerCase","$http","$","ajax","process","REACT_APP_API_URL","fetchData","Promise","resolve","reject","params","headers","Authorization","endpoint","response","_http","ep","then","error","fetch","payload","call","put","container","baggage","errorCondition","errorType","responseJSON","console","errorFor","watchAPI","takeEvery","removeFavorite","artist","addFavorite","setFavorites","favorites","watchAllActions","getFavorites","rootSaga","sessionStorage","reportEvents","logger","log","all","fetchArtist","artistID","method","ARTIST_RECEIVED","DATA_RECEIVED","ARTISTS_RECEIVED","initialState","selected","entered","genres","cache","artists","setArtistReceived","state","data","setSelected","setGenres","setDataRecevied","textEntered","Genres","clearArtist","setArtist","Detail","addToSessionStorage","JSON","stringify","e","parse","id","Saved","app","combineReducers","Search","Favorites","this","props","isFavorite","handleAddFavorite","handleRemoveFavorite","onclick","Button","className","title","onClick","variant","icon","faHeart","Component","getIsFavorite","connect","ownProps","dispatch","Artist","link","showAllGenres","handleDetailView","name","image","popularity","genreName","artistPopularity","additionalGenres","primaryGenre","genre","is_primary","primaryGenreName","map","join","Card","Text","Title","to","Img","src","Body","location","search","handleSetSelected","history","push","pathname","handleChange","selectedGenre","artistListing","labelKey","onChange","evt","addSearch","onInputChange","options","getEntered","getGenres","getCache","getArtists","getSelectedGenre","fetchArtists","getTextEntered","hasGenres","q","fetchGenres","getGenre","linkTo","match","handleGetArtist","handleClearArtist","getArtist","getFavoriteArtists","values","favoriteArtists","View","basename","path","exact","component","App","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6093f06.chunk.js","sourcesContent":["/* constants */\nexport const domain = 'https://music.musicaudience.info';\nexport const genresEP = '/api/v1/music/genres';\nexport const genreSearchEP = '/api/v1/music/genres/<id>/artists'\nexport const artistEP = '/api/v1/music/artists/<id>'\nexport const API_KEY = 'apikey f044f26d5e5c4fc185d9a73c0e41'\n\n/* action types */\nexport const UNSPECIFIED_ERROR = 'UNSPECIFIED_ERROR';\nexport const PENDING = 'PENDING';\nexport const GET_API = 'GET_API';\nexport const SET_PROCESSING = 'SET_PROCESSING';\n\n/* action creators */\nexport const setProcessing = processing => {\n  return { type: SET_PROCESSING, processing };\n};\n\n\n","import React from 'react';\nimport { GET_API } from './types';\n\nexport const getApi = action => {\n  return { type: GET_API, action };\n};\n\nexport const toTitleCase = (str) => {\n  if (typeof str !== 'string'){\n    return str;\n  }\n  \n  return str.replace(\n      /\\w\\S*/g,\n      (txt) => {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n  );\n}\n\nexport const attachScript = (src, id) => {\n  const script = document.createElement('script');\n  script.src = src;\n  script.async = true;\n  script.id = id;\n  document.body.appendChild(script);\n  console.info('SCRIPT ATTACHED!!!!');\n};\n\nexport const refsToValues = (refs) => {\n  if (refs && typeof refs === \"object\"){\n    let obj = {};\n    refs._forEach(function(item, key) {\n      obj[key] = item.current && item.current.value;\n    });\n\n    return obj;\n  }\n\n  throw new Error (`There was and error with the refs: ${refs}`);\n}\n\nexport const formatPhone = number => {\n  if (typeof number === \"string\" && number.length === 10){\n    return number.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\")\n  } \n\n  return number;\n}\n\nvar errorRegExp = /Error$/;\n\nexport const hasNoStateErrors = state => {\n  for (let prop in state){\n    if (errorRegExp.test(prop)){\n      return (state[prop].message === null || state[prop].message === \"\") ? true : false;\n    }\n  }\n\n  return true;\n}\n\nexport const getElementAndAttributes = (elementID, useRoot = true) => {\n  var element\n  if (elementID){\n    element = document.getElementById(elementID);\n  }\n\n  if (useRoot){\n    if (!element) {\n      element = document.getElementById('root');\n    }\n\n     if (!element) {\n      throw new Error (\"No root element found!\")\n    }\n  } else {\n    if (!element) {\n      return false;\n    }\n  }\n\n  var attrs = getAttributes(element);\n  \n  return {element, attrs};\n}\n\nexport const getAttributes = (element) => {\n  if (element && typeof element === 'object' ){\n\n    let attrsArray = Array.prototype.map.call(element.attributes, (attr) => { return {[attr.name]:attr.value} });\n\n    let attrs = attrsArray.reduce((i, acc) => Object.assign(acc, i), {})\n\n    return attrs;\n  }\n\n  return false;\n}\n\nexport const currency = (_price, isFree) => {\n  var price = _price;\n\n  if ( price === null || price === false || isNaN(price)) { // price of \"0\" is \"free\" not falsy\n    return price;\n  } else if (price === 0 && isFree) {\n    return 'free';\n  }\n\n  if (typeof price === \"string\"){\n    price = parseFloat(price)\n  }\n\n  return `$${price.toFixed(2)}`;\n};\n\n\n\nexport const omit = (obj, blacklist) => {\n  if (Array.isArray(blacklist)) {\n    return Object.entries(obj)\n      .filter(([key]) => !blacklist.includes(key))\n      .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\n  }\n\n  throw new Error('blacklist needs to be an array');\n};\n\nexport const formatDate = date => {\n  return `${date.getFullYear()}-${pad( (date.getMonth() + 1) )}-${pad(date.getDate())}`; // must have a 1 based index for month\n};\n\nexport const searchStringToObj = str => {\n  var results = str.replace(/^\\??/, '').split('='),\n    obj = {};\n  if (str) {\n    for (let i = 0; i < results.length; i += 2) {\n      let key = results[i],\n        value = results[i + 1];\n\n      if (booleanTest(value)) {\n        value = value.toLowerCase() === 'true' ? true : false;\n      }\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  return false;\n};\n\nexport const importAll = r => {\n  return r.keys().map(r);\n};\n\n\nexport const booleanTest = value =>\n  value.toLowerCase() === 'true' || value.toLowerCase() === 'false';\n\n\nexport const isNotANumber = string => isNaN(parseInt(string, 10)); // trap for string === null conditon\n\nexport const validation = {\n  telephone: /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/,\n  email: /\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b/i,\n  day: /(^0[1-9]$)|(^[1-2][0-9]$)|(^3[01]$)|(^[1-9]{1}$)/,\n  year: /(^19\\\\d{2}$)|(^20\\\\d{2}$)/\n};\n\n\nexport const validate = (str, pattern) => {\n  if (validation[pattern]) {\n    return validation[pattern].test(str);\n  } else {\n    let message = `Pattern ${pattern} is not supported!`;\n    throw new Error(message);\n  }\n};\n\nexport const isEmpty = obj => {\n  if (!obj) return true;\n  return Object.keys(obj).length === 0 && obj.constructor === Object\n    ? true\n    : false;\n};\n\nexport const createRefs = fields => {\n  return fields.reduce(\n    (acc, field) => Object.assign(acc, { [field]: React.createRef() }),\n    {}\n  );\n};\n\nexport const scrollTo = (element) => {\n  if (\n    element &&\n    element.parentElement &&\n    element.parentElement.scrollIntoView\n  ) {\n    element.parentElement.scrollIntoView();\n  }\n}\n\nexport const pad = item => ('00' + item).slice(-2);\n\nexport const convertDayOfWeek = str => {\n  switch (str) {\n    case 'MON':\n      return 'Monday';\n    case 'TUE':\n      return 'Tuesday';\n    case 'WED':\n      return 'Wednesday';\n    case 'THU':\n      return 'Thursday';\n    case 'FRI':\n      return 'Friday';\n    case 'SAT':\n      return 'Saturday';\n    case 'SUN':\n      return 'Sunday';\n    default:\n      return '--';\n  }\n};\n\n","/*global process */ \n\nimport $ from 'jquery';\nimport { UNSPECIFIED_ERROR,  GET_API, setProcessing, API_KEY } from './types';\nimport { omit } from './index';\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\nconst $http = $.ajax;\nconst domain = (process.env.REACT_APP_API_URL || '');\n\nconst fetchData = action => {\n  return new Promise((resolve, reject) => {\n    let params = Object.assign({}, action.params, {headers: {Authorization: API_KEY}})\n    _http(action.ep, params).then(\n      response => {\n        resolve(response);\n      },\n      error => {\n        reject(error);\n        throw new Error(error);\n      }\n    );\n  });\n};\n\nfunction _http(endpoint, params) {\n  return $http(domain + endpoint, params, response => {\n    return response;\n  });\n}\n\nexport const fetch = function* fetch(payload, type=call,) {\n  yield put(setProcessing(true));\n\n  var response,\n    errorType,\n    container = payload.action.container || 'response',\n    baggage = omit(payload.action, ['type', 'ep', 'params']);\n\n  try {\n    response = yield type(fetchData, payload.action);\n    if (payload.action.errorCondition && typeof payload.action.errorCondition === \"function\"  && payload.action.errorCondition(response)){\n      errorType = payload.action.errorType || UNSPECIFIED_ERROR;\n    }\n  } catch (e) {\n    response = e.responseJSON\n    errorType = payload.action.errorType || UNSPECIFIED_ERROR;\n    console.error('There was an error fetching: ', response); // cant throw here because fetch must always succeed.\n  }\n\n  yield put({\n    type: errorType || payload.action.type,\n    errorFor: payload.action.errorFor || null,\n    [container]: response,\n    ...baggage\n  });\n\n  yield put(setProcessing(false));\n}\n\n// grab all API calls and route them to http agent (e.g. the above fetch method)\nexport const watchAPI = function* watchAPI() {\n  try {\n    yield takeEvery(GET_API, fetch);\n  } catch (e) {\n    throw new Error('There was an error: ', e);\n  }\n}","/* Event Types */\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\nexport const SET_FAVORITES = \"SET_FAVORITES\";\n\n/* Event Creators */\nexport const removeFavorite = artist => {\n\treturn { type: REMOVE_FAVORITE, artist };\n}\n\nexport const addFavorite = artist => {\n\treturn { type: ADD_FAVORITE, artist };\n}\n\nexport const setFavorites = favorites => {\n\treturn {type: SET_FAVORITES, favorites }\n}\n","/* imports */\nimport {\n  all,\n  takeEvery,\n  put\n} from 'redux-saga/effects';\nimport { watchAPI } from './Helpers/async';\nimport { setFavorites } from './View/Saved/types';\n\n// Saga generator functions\n/** private function\n * @description  prints all actions to console.log\n */\nfunction* watchAllActions() {\n  if (sessionStorage && sessionStorage.reportEvents) {\n    // eslint-disable-next-line require-yield\n    yield takeEvery('*', function* logger(action) {\n      console.log(action);\n    });\n  }\n}\n\n\nfunction* getFavorites() {\n  yield put(setFavorites(sessionStorage && sessionStorage.favorites));\n}\n\n/** public function\n * @description  yield all saga generator functions\n */\nexport default function* rootSaga() {\n  yield all([\n    watchAllActions(),\n    watchAPI(),\n    getFavorites(),\n  ]);\n}\n","import {  domain, genresEP, genreSearchEP, artistEP } from '../../Helpers/types';\n\n// constants\nexport const fetchGenres = value =>\n { \n \treturn {\n\t\tep: `${domain}${genresEP}`,\n\t\tparams: {\n\t\t\tdata: {q:value},\n\t\t\tmethod: 'GET'\n\t\t},\n\t\ttype: DATA_RECEIVED,\n\t\tcontainer: 'response',\n\t\tvalue\n\t}\n}\n\nexport const fetchArtists = artistID => {\n\tlet ep = genreSearchEP.replace(\"<id>\", artistID);\n\n\treturn {\n\t\tep: `${domain}${ep}`,\n\t\tparams: {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\ttype: ARTISTS_RECEIVED,\n\t\tcontainer: 'response',\n\t\tartistID\n\t}\n}\n\nexport const fetchArtist = artistID => {\n\tlet ep = artistEP.replace(\"<id>\", artistID);\n\n\treturn {\n\t\tep: `${domain}${ep}`,\n\t\tparams: {\n\t\t\tmethod: 'GET'\n\t\t},\n\t\ttype: ARTIST_RECEIVED,\n\t\tcontainer: 'response',\n\t\tartistID\n\t}\n}\n\n// event types\nexport const TEXT_ENTERED = \"TEXT_ENTERED\";\nexport const DATA_RECEIVED = \"DATA_RECEIVED\";\nexport const SET_GENRES = \"SET_GENRES\";\nexport const SET_SELECTED = \"SET_SELECTED\";\nexport const ARTISTS_RECEIVED = \"ARTISTS_RECEIVED\";\nexport const ARTIST_RECEIVED = \"ARTIST_RECEIVED\"\nexport const CLEAR_ARTIST = \"CLEAR_ARTIST\";\n\n// event creators\nexport const getTextEntered = value => {\n\treturn {type:TEXT_ENTERED, value}\n}\n\nexport const setGenres = value => {\n\treturn {type: SET_GENRES, value }\n}\n\nexport const setSelected = selected => {\n\treturn {type: SET_SELECTED, selected}\n}\n\nexport const clearArtist = () => {\n\treturn {type: CLEAR_ARTIST }\n}\n\n","import { DATA_RECEIVED, TEXT_ENTERED, SET_GENRES, SET_SELECTED, ARTISTS_RECEIVED } from './types';\n\nconst initialState = {\n  selected: null,\n  entered: \"\",\n  genres: [],\n  cache: {},\n  artists: []\n};\n\nconst Genres = (state = initialState, action) => {\n  switch (action.type) {\n    case TEXT_ENTERED:\n      return textEntered(state, action);\n    case DATA_RECEIVED:\n      return setDataRecevied(state, action);\n    case ARTISTS_RECEIVED:\n      return setArtistReceived(state, action);\n    case SET_GENRES:\n      return setGenres(state, action);\n    case SET_SELECTED:\n      return setSelected(state, action);\n    default:\n      return state;\n  }\n};\n\nconst setArtistReceived = (state, action) => {\n  let artists = action.response.data;\n  return Object.assign({}, state, {artists})\n}\n\nconst setSelected = (state, action) => {\n  let selected = action.selected;\n  if (state.selected !== selected){\n    return Object.assign({}, state, {selected});\n  }\n\n  return state;\n}\n\nconst setGenres = (state, action) => {\n  let key = action.value,\n    genres = state.cache[key];\n  return Object.assign({}, state, {genres})\n}\n\nconst setDataRecevied = (state, action) => {\n  let genres = action.response.data, \n    cache = Object.assign({}, state.cache, {[action.value]: genres})\n  return Object.assign({}, state, {genres, cache})\n}\n\nconst textEntered = (state, action) => {\n  let entered = action.value;\n  if (entered !== state.entered){\n    return Object.assign({}, state, {entered})\n  }\n\n  return state\n}\n\nexport default Genres;","import { ARTIST_RECEIVED, CLEAR_ARTIST } from '../Search/types';\n\nconst initialState = {\n  artist: null\n};\n\nconst Detail = (state = initialState, action) => {\n  switch (action.type) {\n    case ARTIST_RECEIVED:\n      return setArtist(state, action);\n    case CLEAR_ARTIST:\n    \treturn clearArtist(state, action)\n    default:\n      return state;\n  }\n};\n\nconst clearArtist = (state, action) => {\n\treturn initialState;\n}\n\nconst setArtist = (state, action) => {\n  let artist = action.response.data[0];\n  return Object.assign({}, state, {artist})\n}\n\n\n\nexport default Detail;","import { ADD_FAVORITE, REMOVE_FAVORITE, SET_FAVORITES } from './types';\n\nconst initialState = {\n  favorites: {}\n};\n\nconst Saved = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAVORITE:\n      return addFavorite(state, action);\n    case REMOVE_FAVORITE:\n    \treturn removeFavorite(state, action);\n    case SET_FAVORITES:\n      return setFavorites(state, action);\n    default:\n      return state;\n  }\n};\n\nconst addToSessionStorage = value => {\n  try {\n    let favorites = JSON.stringify(value);\n    sessionStorage.favorites = favorites;\n  } catch (e) {\n    throw new Error (\"There was an error saving your favorites: \" + e)\n  }\n}\n\n\nconst setFavorites = (state, action) => {\n  var favorites = action.favorites;\n  if (favorites){\n    try {\n      favorites = JSON.parse(favorites);\n    } catch (e) {\n      throw new Error (\"There was an error getting your favorites: \" + e)\n    }\n    return Object.assign({}, state, {favorites});\n  }\n\n  return state;\n}\n\nconst addFavorite = (state, action) => {\n  let artist = action.artist;\n\n  if (!state.favorites[artist.id]){\n    state.favorites[artist.id] = artist;\n    addToSessionStorage(state.favorites)\n    return Object.assign({}, state);\n  }\n\n  return state;\n}\n\nconst removeFavorite = (state, action) => {\n  let id = action.artist.id;\n  if (state.favorites[id]){\n    delete state.favorites[id];\n    addToSessionStorage(state.favorites)\n    return Object.assign({}, state);\n  }\n\n  return state;\n}\n\nexport default Saved;","import { combineReducers } from 'redux';\nimport Search from './View/Search/reducer';\nimport Detail from './View/Detail/reducer';\nimport Saved from './View/Saved/reducer';\n\nconst app = combineReducers({\n\tSearch,\n\tDetail,\n\tSaved\n});\n\nexport default app;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { addFavorite, removeFavorite } from '../Saved/types';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport faHeart from '@fortawesome/fontawesome-free-solid/faHeart';\nimport './favorite.css';\n\nclass Favorites extends Component {\n\trender(){\n\t\tlet {artist, isFavorite , handleAddFavorite, handleRemoveFavorite} = this.props,\n\t\tonclick = () => { \n\t\t\tif (isFavorite){\n\t\t\t\thandleRemoveFavorite(artist);\n\t\t\t} else {\n\t\t\t\thandleAddFavorite(artist);\n\t\t\t}\n\t\t};\n\n\t\tif (isFavorite){\n\t\t\treturn <Button className=\"favorite\" title=\"I am a favorite\" onClick={onclick} variant=\"primary\"><FontAwesomeIcon icon={faHeart} /></Button>\n\t\t} else {\n\t\t\treturn <Button title=\"I am a NOT favorite\" onClick={onclick} variant=\"primary\"><FontAwesomeIcon icon={faHeart} /></Button>\n\t\t}\n\t}\n}\n\nconst getIsFavorite = (state, props) => state.Saved.favorites[props.artist.id];\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tisFavorite: getIsFavorite(state, ownProps),\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleRemoveFavorite: artist => {\n\t\t\tdispatch(removeFavorite(artist))\n\t\t},\n\t\thandleAddFavorite: artist => {\n\t\t\tdispatch(addFavorite(artist))\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Favorites);","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport Favorites from './Favorites';\nimport './artist.css'\n\nconst Artist = (props) => {\n\tif (props.artist){\n\t\tvar link;\n\t\tlet { artist, showAllGenres,  handleDetailView} = props,\n\t\t\t{name, image, genres, id, popularity } = artist,\n\t\t\tgenreName = null,\n\t\t\tartistPopularity = null,\n\t\t\tadditionalGenres = null,\n\t\t\tprimaryGenre = genres.filter((genre) => genre.is_primary),\n\t\t\tprimaryGenreName = null\n\n\t\t\tif (primaryGenre && primaryGenre.length){\n\t\t\t\tprimaryGenreName = primaryGenre[0].name\n\t\t\t}\n\n\t\tif (showAllGenres) {\n\t\t\t\n\t\t\tlet genreNames = genres.map((genre) => genre.name).filter((genre) => genre !== primaryGenreName);\n\n\t\t\tgenreName = genreNames.join(\", \");\n\t\t\tartistPopularity  = <Card.Text>Popularity: {popularity}</Card.Text>;\n\t\t\tadditionalGenres = genreName ? <Card.Text>Additional Genres: {genreName}</Card.Text> : null;\n\t\t}\n\n\t\tif(handleDetailView){\n\t\t\tlink = <Card.Title><Link to={\"/detail/\" + id}><span className=\"view\" onClick={() => handleDetailView(artist.id)}>{name}</span></Link></Card.Title>\n\t\t} else {\n\t\t\tlink = <Card.Title><span className=\"view no-link\" onClick={() => handleDetailView(artist.id)}>{name}</span></Card.Title>\n\n\t\t}\n\n\t\treturn (\n\t\t\t<Card key={id}>\n\t\t\t\t<Card.Img variant=\"top\" src={image} />\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{link}\n\t\t\t\t\t<Card.Text>Primary Genre:<br /><span className=\"primary-genre\">{primaryGenreName}</span></Card.Text>\n\t\t\t\t\t{additionalGenres}\n\t\t\t\t\t{artistPopularity}\n\t\t\t\t\t<Favorites artist={artist} />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n\n\treturn null;\n}\n\nexport default Artist;","import React, {Component}  from 'react';\nimport { connect } from 'react-redux';\nimport { getApi, searchStringToObj } from '../../Helpers';\nimport { Link } from \"react-router-dom\";\nimport { getTextEntered, fetchGenres, setGenres, setSelected, fetchArtists, fetchArtist } from './types';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport Artist from '../shared/Artist';\nimport './search.css';\n\nclass Search extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet { location } = props,\n\t\t\tparams = searchStringToObj(location.search);\n\n\t\tif(params.id && !this.props.artists.length){\n\t\t\tthis.props.handleSetSelected(true, params.id)\n\t\t}\n\t}\n\n\taddSearch(id) {\n\t\tthis.props.history.push({\n\t\t    pathname: '/',\n\t\t    search: `?id=${id}`\n\t\t})\n\t}\n\n\trender() {\n\t\tlet { handleChange, genres, cache, handleSetSelected, artists, handleDetailView, selectedGenre } = this.props,\n\t\t\tartistListing = artists && artists.length ? artists.map((artist) => <div className=\"col\" key={artist.id}><Artist artist={artist} handleDetailView={handleDetailView} /></div>) : null,\n\t\t\tselected = selectedGenre ? <span>You have selected the <em>{selectedGenre}</em> genre</span> : null;\n\t\treturn (\n\t\t\t<div className=\"search col-sm\">\n\t\t\t\t<h1>Search</h1>\n\t\t\t\t<nav>\n\t\t\t\t\t<Link className=\"favorites-link\" to=\"/saved\">View Favorites</Link>\n\t\t\t\t</nav>\n\t\t\t\t<div className=\"search-input\">\n\t\t\t\t\t<label>Enter a search term</label>\n\t\t\t\t\t<Typeahead labelKey=\"name\" onChange={(evt) => { handleSetSelected(evt[0], evt[0].id); this.addSearch(evt[0].id)} } onInputChange={(evt) => handleChange(cache, evt)} options={genres} id=\"typeAheadID\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"selected-genre\">\n\t\t\t\t\t{selected}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"search-results\">\n\t\t\t\t\t<div className=\"artists\">{artistListing}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst getEntered = state => state.Search.entered;\nconst getGenres = state => state.Search.cache[state.Search.entered] || [];\nconst getCache = state => state.Search.cache;\nconst getArtists = state => state.Search.artists;\nconst getSelectedGenre = state => state.Search.selected && state.Search.selected.name\nconst hasGenres = (cache, value) => !!(cache[value]);\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tentered: getEntered(state),\n\t\tgenres: getGenres(state),\n\t\tcache: getCache(state),\n\t\tartists: getArtists(state),\n\t\tselectedGenre: getSelectedGenre(state)\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleSetSelected: (selected, id) => {\n\t\t\tif (selected){\n\t\t\t\tdispatch(setSelected(selected))\n\t\t\t\tdispatch(getApi(fetchArtists(id)));\n\t\t\t}\n\t\t},\n\t\thandleChange: (cache, value) => {\n\t\t\tdispatch(getTextEntered(value));\n\n\t\t\tif (hasGenres(cache, value)) {\n\t\t\t\tdispatch(setGenres(value))\n\t\t\t} else {\n\t\t\t\tdispatch(getApi(fetchGenres(value)));\n\t\t\t}\n\t\t},\n\t\thandleDetailView: artistID => {\n\t\t\tdispatch(getApi(fetchArtist(artistID)))\n\t\t}\n\t}\n}\n\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Search);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nconst Back = (props) => {\n\tlet {genre} = props,\n\t\tid = genre && genre.id,\n\t\tlinkTo = id ? \"/?id=\" + id : \"/\";\n\treturn (\n\t\t<Link to={linkTo}>Back to Search</Link>\n\t);\n\t\n}\n\nconst getGenre = state => state.Search.selected;\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tgenre: getGenre(state)\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Back);\n\n\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Artist from '../shared/Artist';\nimport Back from '../shared/Back';\nimport { getApi } from '../../Helpers';\nimport { fetchArtist, clearArtist } from '../Search/types';\nimport { Link } from \"react-router-dom\";\nimport './detail.css';\n\nclass Detail extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tif(props.match && props.match.params && props.match.params.id && !this.props.artists){\n\t\t\tprops.handleGetArtist(props.match.params.id)\n\t\t}\n\t}\n\n\tcomponentWillUnmount(){\n\t\tthis.props.handleClearArtist();\n\t}\n\t\n\trender(){\n\t\tlet { artist } = this.props\n\n\t\tif (artist) {\n\t\t\treturn (\n\t\t\t\t<div className=\"detail\">\n\t\t\t\t\t<h1>Details</h1>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<Back />&nbsp;|&nbsp;\n\t\t\t\t\t\t<Link className=\"favorites-link\" to=\"/saved\">View Favorites</Link>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<div className=\"search-results\">\n\t\t\t\t\t\t<Artist artist={artist} showAllGenres={true}  />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nconst getArtist = state => state.Detail.artist;\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tartist: getArtist(state)\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleGetArtist: id => {\n\t\t\tdispatch(getApi(fetchArtist(id)))\n\t\t},\n\t\thandleClearArtist: () => {\n\t\t\tdispatch(clearArtist());\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Detail);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addFavorite, removeFavorite } from './types';\nimport Artist from '../shared/Artist';\nimport Back from '../shared/Back';\nimport { getApi } from '../../Helpers';\nimport { fetchArtist } from '../Search/types';\nimport './saved.css';\n\nconst Saved = (props) => {\n\tvar artists;\n\n\tlet { favoriteArtists, handleDetailView } = props;\n\t\tartists = favoriteArtists.map((artist) => <Artist key={artist.id} artist={artist} handleDetailView={handleDetailView} />);\n\n\tif (artists && artists.length === 0){\n\t\tartists = <span>You have no saved favorites</span>\n\t}\n\n\treturn (\n\t\t<div className=\"saved\">\n\t\t\t<h1>Favorites</h1>\n\t\t\t<nav>\n\t\t\t\t<Back />\n\t\t\t</nav>\n\t\t\t<div className=\"search-results\">\n\t\t\t\t<div className=\"artists\">{artists}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst getFavorites = state => state.Saved.favorites;\nconst getFavoriteArtists = state =>  Object.values(getFavorites(state))\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tfavoriteArtists: getFavoriteArtists(state)\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleRemoveFavorite: id => {\n\t\t\tdispatch(removeFavorite(id))\n\t\t},\n\t\thandleAddFavorite: id => {\n\t\t\tdispatch(addFavorite(id))\n\t\t},\n\t\thandleDetailView: artistID => {\n\t\t\tdispatch(getApi(fetchArtist(artistID)))\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n\t)(Saved);","import React from 'react';\nimport Search from './Search';\nimport Detail from './Detail';\nimport Saved from './Saved';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './view.css';\n\nconst View = () => {\n\treturn (\n\t\t<div className=\"component\">\n\t\t<Router basename=\"/\">\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/saved\" exact component={Saved} />\n\t\t\t\t<Route path=\"/detail/:id\" exact component={Detail} />\n\t\t\t\t<Route path=\"/:id?\" exact component={Search} />\n\t\t\t</Switch>\n\t\t</Router>\n\t\t</div>\n\t)\n}\nexport default View","import React from 'react';\nimport View from './View'\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <View />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nimport reducers from './reducers';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './index.css';\n\n// saga boilerplate\nconst sagaMiddleware = createSagaMiddleware();\nlet store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}